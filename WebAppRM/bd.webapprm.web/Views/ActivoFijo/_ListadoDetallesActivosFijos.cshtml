@model List<RecepcionActivoFijoDetalleSeleccionado>
@{ 
    ListadoDetallesActivosFijosViewModel listadoDetallesActivosFijosViewModel = ViewBag.Configuraciones;
}
<div class="table-responsive">
    @{
        if (listadoDetallesActivosFijosViewModel.IsConfiguracionSeleccionComponentes)
        {
            <div class="row">
                <div class="alert alert-info alert-block" style="border-left-width:5px !important;padding-left:20px !important;">
                    <h4 class="alert-heading">Informaci&oacute;n</h4>
                    Escoja los Activos Fijos que adicionar&aacute; como Componentes marcando las casillas de selecci&oacute;n.
                </div>
            </div>
        }
    }
    <table id="@listadoDetallesActivosFijosViewModel.NombreTabla" class="table table-striped table-bordered table-hover" style="width:100%;">
        <thead>
            @{ await Html.RenderPartialAsync("~/Views/Shared/_VistaFiltradoText.cshtml", listadoDetallesActivosFijosViewModel.Cantidad, new ViewDataDictionary(ViewData) { { "MostrarFiltradoUltimaColumna", listadoDetallesActivosFijosViewModel.MostrarFiltradoUltimaColumna } });}
            <tr>
                @{
                    if (listadoDetallesActivosFijosViewModel.IsConfiguracionSeleccion)
                    {
                        <th>
                            @{ 
                                await Html.RenderPartialAsync("_CheckBoxSeleccion", new ViewDataDictionary(ViewData){
                                    { "Seleccionado", false },
                                    { "IdRecepcionActivoFijoDetalle", 0 },
                                    { "IsConfiguracionSeleccionDisabled", listadoDetallesActivosFijosViewModel.IsConfiguracionSeleccionDisabled },
                                    { "CallbackFunctionAddRowDetalleTodos", listadoDetallesActivosFijosViewModel.CallbackFunctionCheckBox },
                                    { "CallbackFunctionRemoveRowDetalleTodos", listadoDetallesActivosFijosViewModel.CallbackFunctionRemoveTodos }
                                });
                            }
                        </th>
                    }
                    <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.IdCodigoActivoFijo)</th>
                    if (listadoDetallesActivosFijosViewModel.IsConfiguracionDatosActivo)
                    {
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.ClaseActivoFijo.IdTipoActivoFijo)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.IdClaseActivoFijo)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.IdSubClaseActivoFijo)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.Nombre)</th>
                    }
                }
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.Modelo.IdMarca)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.ActivoFijo.IdModelo)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.Serie)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroChasis)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroMotor)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.Placa)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.NumeroClaveCatastral)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.Bodega.IdSucursal)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdBodega)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdEmpleado)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdProveedor)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdMotivoAlta)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.FechaRecepcion)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.OrdenCompra)</th>
                <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.RecepcionActivoFijo.IdFondoFinanciamiento)</th>
                @{
                    if (listadoDetallesActivosFijosViewModel.IsConfiguracionDatosAlta)
                    {
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.AltaActivoFijoActual.FechaAlta)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.AltaActivoFijoActual.FacturaActivoFijo.NumeroFactura)</th>
                    }
                    if (listadoDetallesActivosFijosViewModel.IsConfiguracionDatosBaja)
                    {
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.BajaActivoFijoActual.FechaBaja)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().RecepcionActivoFijoDetalle.BajaActivoFijoActual.IdMotivoBaja)</th>
                    }
                    if (listadoDetallesActivosFijosViewModel.IsConfiguracionDatosMovilizaciones)
                    {
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Componentes)</th>
                        <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Observaciones)</th>
                    }
                    if (listadoDetallesActivosFijosViewModel.IsConfiguracionOpciones)
                    {
                        <th>Opciones</th>
                    }
                    if (listadoDetallesActivosFijosViewModel.IsConfiguracionSeleccionAltas)
                    {
                        <th style="display: none !important;"></th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @{
                foreach (var item in Model)
                {
                    <tr id="@listadoDetallesActivosFijosViewModel.NombreTabla@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle">
                        @{
                            if (listadoDetallesActivosFijosViewModel.IsConfiguracionSeleccion)
                            {
                                <td>
                                    @{ 
                                        await Html.RenderPartialAsync("_CheckBoxSeleccion", new ViewDataDictionary(ViewData){
                                            { "Seleccionado", item.Seleccionado },
                                            { "CallbackFunctionCheckBox", listadoDetallesActivosFijosViewModel.CallbackFunctionCheckBox },
                                            { "IdRecepcionActivoFijoDetalle", item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle },
                                            { "IsConfiguracionSeleccionDisabled", listadoDetallesActivosFijosViewModel.IsConfiguracionSeleccionDisabled }
                                        });
                                    }
                                </td>
                            }
                            <td id="@String.Format("{0}{1}Codigosecuencial", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.CodigoActivoFijo?.Codigosecuencial ?? "-");}</td>
                            if (listadoDetallesActivosFijosViewModel.IsConfiguracionDatosActivo)
                            {
                                <td id="@String.Format("{0}{1}TipoActivoFijo", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.ClaseActivoFijo.TipoActivoFijo.Nombre)</td>
                                <td id="@String.Format("{0}{1}ClaseActivoFijo", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.ClaseActivoFijo.Nombre)</td>
                                <td id="@String.Format("{0}{1}SubclaseActivoFijo", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.SubClaseActivoFijo.Nombre)</td>
                                <td id="@String.Format("{0}{1}NombreActivoFijo", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(c=> item.RecepcionActivoFijoDetalle.ActivoFijo.Nombre)</td>
                            }
                        }
                        <td id="@String.Format("{0}{1}Marca", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.ActivoFijo?.Modelo?.Marca?.Nombre ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Modelo", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.ActivoFijo?.Modelo?.Nombre ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Serie", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.Serie ?? "-");}</td>
                        <td id="@String.Format("{0}{1}NumeroChasis", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroChasis ?? "-");}</td>
                        <td id="@String.Format("{0}{1}NumeroMotor", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroMotor ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Placa", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.Placa ?? "-");}</td>
                        <td id="@String.Format("{0}{1}NumeroClaveCatastral", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.NumeroClaveCatastral ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Sucursal", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)" data-idsucursal="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.LibroActivoFijo.IdSucursal" data-idlibroactivofijo="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdLibroActivoFijo">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.LibroActivoFijo?.Sucursal?.Nombre ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Bodega", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Bodega?.Nombre ?? "-");}</td>
                        <td id="@String.Format("{0}{1}Empleado", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)" data-idempleado="@item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.IdEmpleado">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado != null ? $"{item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado?.Persona?.Nombres} {item?.RecepcionActivoFijoDetalle?.UbicacionActivoFijoActual?.Empleado?.Persona?.Apellidos}" : "-"); }</td>
                        <td id="@String.Format("{0}{1}Proveedor", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.Proveedor != null ? $"{item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.Proveedor.Nombre} {item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.Proveedor.Apellidos}" : "-");}</td>
                        <td id="@String.Format("{0}{1}MotivoAlta", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.MotivoAlta?.Descripcion ?? "-");}</td>
                        <td id="@String.Format("{0}{1}FechaRecepcion", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(modelItem => item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.FechaRecepcion)</td>
                        <td id="@String.Format("{0}{1}OrdenCompra", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@Html.DisplayFor(modelItem => item.RecepcionActivoFijoDetalle.RecepcionActivoFijo.OrdenCompra)</td>
                        <td id="@String.Format("{0}{1}FondoFinanciamiento", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.RecepcionActivoFijo?.FondoFinanciamiento?.Nombre ?? "-");}</td>
                        @{
                            if (listadoDetallesActivosFijosViewModel.IsConfiguracionDatosAlta)
                            {
                                <td id="@String.Format("{0}{1}FechaAlta", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.AltaActivoFijoActual?.FechaAlta != null ? item.RecepcionActivoFijoDetalle.AltaActivoFijoActual.FechaAlta.ToString("dd/MM/yyyy hh:mm tt") : "-");}</td>
                                <td id="@String.Format("{0}{1}NumeroFactura", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.AltaActivoFijoActual?.FacturaActivoFijo?.NumeroFactura ?? "-");}</td>
                            }
                            if (listadoDetallesActivosFijosViewModel.IsConfiguracionDatosBaja)
                            {
                                <td id="@String.Format("{0}{1}FechaBaja", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.BajaActivoFijoActual?.FechaBaja != null ? item.RecepcionActivoFijoDetalle.BajaActivoFijoActual.FechaBaja.ToString("dd/MM/yyyy hh:mm tt") : "-");}</td>
                                <td id="@String.Format("{0}{1}MotivoBaja", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(item?.RecepcionActivoFijoDetalle?.BajaActivoFijoActual?.MotivoBaja?.Nombre ?? "-");}</td>
                            }
                            if (listadoDetallesActivosFijosViewModel.IsConfiguracionDatosMovilizaciones)
                            {
                                <td id="@String.Format("{0}{1}Componentes", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">@{await ViewContext.Writer.WriteAsync(!String.IsNullOrEmpty(item?.Componentes) ? item.Componentes : "-");}</td>
                                if (listadoDetallesActivosFijosViewModel.IsConfiguracionSeleccionMovilizaciones)
                                {
                                    <td id="@String.Format("{0}{1}Observaciones", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">
                                        <a href="form-x-editable.html#" id="textAreaEditable_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" class="btntextAreaEditable" data-idrecepcionactivofijodetalle="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" data-type="textarea" data-pk="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" data-original-title="Observaciones">@{await ViewContext.Writer.WriteAsync(item?.Observaciones);}</a>
                                        <input type="hidden" id="hTextAreaEditable_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hTextAreaEditable_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" />
                                    </td>
                                }
                                if (listadoDetallesActivosFijosViewModel.IsConfiguracionListadoMovilizacionesGestionar || listadoDetallesActivosFijosViewModel.IsConfiguracionListadoMovilizaciones)
                                {
                                    <td id="@String.Format("{0}{1}Observaciones", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)">
                                        @{await ViewContext.Writer.WriteAsync(!String.IsNullOrEmpty(item?.Observaciones) ? item.Observaciones : "-");}
                                    </td>
                                }
                            }
                            if (listadoDetallesActivosFijosViewModel.IsConfiguracionSeleccionAltas)
                            {
                                <td id="@String.Format("{0}{1}Comunes", listadoDetallesActivosFijosViewModel.NombreTabla, item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)" style="display:none !important;">
                                    <input type="hidden" id="hComunesComponentes_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hComunesComponentes_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@String.Join(",", item.RecepcionActivoFijoDetalle.ComponentesActivoFijoOrigen.Select(c => c.IdRecepcionActivoFijoDetalleComponente))" />
                                </td>
                            }
                            if (listadoDetallesActivosFijosViewModel.IsConfiguracionOpciones)
                            {
                                <td>
                                    @{
                                        if (listadoDetallesActivosFijosViewModel.IsConfiguracionListadoMantenimientos)
                                        {
                                            <a asp-action="ListadoMantenimientos" asp-route-id="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle">Mantenimientos</a>
                                        }
                                        if (listadoDetallesActivosFijosViewModel.IsConfiguracionListadoProcesosJudiciales)
                                        {
                                            <a asp-action="ListadoProcesosJudiciales" asp-route-id="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle">Procesos Judiciales</a>
                                        }
                                        if (listadoDetallesActivosFijosViewModel.IsConfiguracionListadoRevalorizaciones)
                                        {
                                            <a asp-action="ListadoRevalorizaciones" asp-route-id="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle">Revalorizaciones</a>
                                        }
                                        if (listadoDetallesActivosFijosViewModel.IsConfiguracionListadoComponentes)
                                        {
                                            <div id="divEliminarComponente_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" class="btnEliminarComponentes" style="display:inline;"><a href="javascript: void(0);" id="btnEliminarComponente_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" onclick="abrirVentanaConfirmacion('btnEliminarComponente_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-funcioncallback="callBackEliminarComponente('@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-titulo="Eliminar" data-descripcion="&#191; Desea eliminar el Componente... ?">Eliminar</a></div>
                                        }
                                        if (listadoDetallesActivosFijosViewModel.IsConfiguracionListadoAltasGestionar)
                                        {
                                            <input type="hidden" id="hComponentes_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hComponentes_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@String.Join(",", item.RecepcionActivoFijoDetalle.ComponentesActivoFijoOrigen.Select(c => c.IdRecepcionActivoFijoDetalleComponente))" />
                                            <input type="hidden" class="hiddenIdRecepcionActivoFijoDetalle" id="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" />
                                            <input type="hidden" class="hiddenHEmpleado" id="hEmpleado_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hEmpleado_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdEmpleado" />
                                            <input type="hidden" id="hSucursal_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hSucursal_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.LibroActivoFijo.IdSucursal" />
                                            <input type="hidden" id="hLibroActivoFijo_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hLibroActivoFijo_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdLibroActivoFijo" />
                                            <a href="javascript:void(0);" onclick="cargarFormularioDatosEmpleado(@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)" class="btnDatosEmpleado" data-idfila="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" data-toggle="modal" data-target="#myModalEmpleado">Custodio</a>
                                            if (!listadoDetallesActivosFijosViewModel.IsConfiguracionAltasGestionarEditar)
                                            {
                                                <span>| </span><a href="javascript:void(0);" onclick="cargarFormularioComponentesDatosEspecificos(@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle)" class="btnComponentesDatosEspecificos" data-idfila="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" data-idorigen="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" data-toggle="modal" data-target="#myModalComponente">Componentes</a>
                                                <div id="divEliminarDatosEspecificos_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" class="btnEliminarDatosEspecificos" style="display:inline;">
                                                    <span>| </span><a href="javascript:void(0);" id="btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" onclick="abrirVentanaConfirmacion('btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-funcioncallback="callBackFunctionEliminarDatoEspecifico('@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-titulo="Eliminar" data-descripcion="&#191;Desea eliminar el Activo Fijo seleccionado... ?">Eliminar</a>
                                                </div>
                                            }
                                        }
                                        if (listadoDetallesActivosFijosViewModel.IsConfiguracionListadoBajasGestionar)
                                        {
                                            <input type="hidden" class="hiddenIdRecepcionActivoFijoDetalle" id="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" />
                                            <input type="hidden" class="hiddenHEmpleado" id="hEmpleado_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hEmpleado_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.UbicacionActivoFijoActual.IdEmpleado" />
                                            if (!listadoDetallesActivosFijosViewModel.IsConfiguracionBajasGestionarEditar)
                                            {
                                                <div id="divEliminarDatosEspecificos_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" class="btnEliminarDatosEspecificos" style="display:inline;">
                                                    <a href="javascript:void(0);" id="btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" onclick="abrirVentanaConfirmacion('btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-funcioncallback="callBackFunctionEliminarDatoEspecifico('@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-titulo="Eliminar" data-descripcion="&#191;Desea eliminar el Activo Fijo seleccionado... ?">Eliminar</a>
                                                </div>
                                            }
                                        }
                                        if (listadoDetallesActivosFijosViewModel.IsConfiguracionGestionarInventarioAutomatico || listadoDetallesActivosFijosViewModel.IsConfiguracionSeleccionMovilizaciones)
                                        {
                                            <input type="hidden" class="hiddenIdRecepcionActivoFijoDetalle" id="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" name="hIdRecepcionActivoFijoDetalle_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" value="@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" />
                                            <div id="divEliminarDatosEspecificos_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" class="btnEliminarDatosEspecificos" style="display:inline;">
                                                <a href="javascript:void(0);" id="btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle" onclick="abrirVentanaConfirmacion('btnEliminarDatosEspecifico_@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-funcioncallback="callBackFunctionEliminarDatoEspecifico('@item.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle')" data-titulo="Eliminar" data-descripcion="&#191;Desea eliminar el Activo Fijo seleccionado... ?">Eliminar</a>
                                            </div>
                                        }
                                    }
                                </td>
                            }
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
    @{ 
        string idsArrRecepcionActivoFijoDetalleTodos = String.Join(",", Model.Select(c => c.RecepcionActivoFijoDetalle.IdRecepcionActivoFijoDetalle));
    }
    <input type="hidden" id="hIdsRecepcionActivoFijoDetalleTodos" value="@idsArrRecepcionActivoFijoDetalleTodos" />
</div>
<script>
    arrRecepcionActivoFijoDetalleTodos = "@idsArrRecepcionActivoFijoDetalleTodos".split(",");
</script>