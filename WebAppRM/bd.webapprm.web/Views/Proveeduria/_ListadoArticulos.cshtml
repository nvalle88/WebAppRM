@model List<MaestroArticuloSucursalSeleccionado>
@inject bd.webapprm.servicios.Interfaces.IClaimsTransfer claimsTransfer
@{
    string nombreTabla = "tableDetallesArticulos";
    bool isFuncionarioSolicitante = claimsTransfer.IsADMIGrupo(ADMI_Grupos.FuncionarioSolicitante);
    bool isSeleccion = ViewBag.IsSeleccion ?? true;
    bool mostrarValorActual = ViewBag.MostrarValorActual ?? true;

    var cantidad = 7;
    if (isSeleccion)
    {
        cantidad++;
    }
    if (mostrarValorActual)
    {
        cantidad++;
    }
}
<div class="table-responsive">
    <table id="@nombreTabla" class="table table-striped table-bordered table-hover" style="width:100%;">
        <thead>
            <tr>
                @{
                    await Html.RenderPartialAsync("~/Views/Shared/_VistaFiltradoText.cshtml", cantidad, new ViewDataDictionary(ViewData) { { "MostrarFiltradoUltimaColumna", true } });
                    if (isSeleccion)
                    {
                        <th id="@String.Format("th{0}{1}", nombreTabla, ThClassName.seleccion)">
                            @{
                                await Html.RenderPartialAsync("_CheckBoxSeleccion", new ViewDataDictionary(ViewData){
                                    { "Seleccionado", false },
                                    { "IdRecepcionActivoFijoDetalle", 0 },
                                    { "CallbackFunctionAddRowDetalleTodos", "CallbackFunctionCheckBoxArticulo" },
                                    { "CallbackFunctionRemoveRowDetalleTodos", "callBackFunctionEliminarDatoEspecifico" }
                                });
                            }
                        </th>
                    }
                }
                <th id="@String.Format("th{0}{1}", nombreTabla, ThClassName.nombreArticulo)">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().MaestroArticuloSucursal.IdArticulo)
                </th>
                <th id="@String.Format("th{0}{1}", nombreTabla, ThClassName.tipoArticulo)">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().MaestroArticuloSucursal.Articulo.SubClaseArticulo.ClaseArticulo.IdTipoArticulo)
                </th>
                <th id="@String.Format("th{0}{1}", nombreTabla, ThClassName.claseArticulo)">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().MaestroArticuloSucursal.Articulo.SubClaseArticulo.IdClaseArticulo)
                </th>
                <th id="@String.Format("th{0}{1}", nombreTabla, ThClassName.subclaseArticulo)">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().MaestroArticuloSucursal.Articulo.IdSubClaseArticulo)
                </th>
                <th id="@String.Format("th{0}{1}", nombreTabla, ThClassName.unidadMedida)">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().MaestroArticuloSucursal.Articulo.IdUnidadMedida)
                </th>
                <th id="@String.Format("th{0}{1}", nombreTabla, ThClassName.marca)">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().MaestroArticuloSucursal.Articulo.Modelo.IdMarca)
                </th>
                <th id="@String.Format("th{0}{1}", nombreTabla, ThClassName.modelo)">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().MaestroArticuloSucursal.Articulo.IdModelo)
                </th>
                @{ 
                    if (mostrarValorActual)
                    {
                        <th id="@String.Format("th{0}{1}", nombreTabla, ThClassName.valorActual)">
                            @Html.DisplayNameFor(model => model.FirstOrDefault().MaestroArticuloSucursal.ValorActual)
                        </th>
                    }
                }
                <th class="hide" id="@String.Format("th{0}{1}", nombreTabla, ThClassName.cantidad)"></th>
                <th class="hide" id="@String.Format("th{0}{1}", nombreTabla, ThClassName.valorUnitario)"></th>
                <th class="hide" id="@String.Format("th{0}{1}", nombreTabla, ThClassName.valorTotal)"></th>
                <th class="hide" id="@String.Format("th{0}{1}", nombreTabla, ThClassName.cantidadBodega)"></th>
                <th class="hide" id="@String.Format("th{0}{1}", nombreTabla, ThClassName.proveedor)"></th>
                <th class="hide" id="@String.Format("th{0}{1}", nombreTabla, ThClassName.codigoSecuencial)"></th>
                <th class="hide" id="@String.Format("th{0}{1}", nombreTabla, ThClassName.bodega)"></th>
                <th class="hide" id="@String.Format("th{0}{1}", nombreTabla, ThClassName.fechaRecepcion)"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr id="@String.Format("{0}{1}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal)">
                    @{ 
                        if (isSeleccion)
                        {
                            <td class="thSeleccion">
                                @{
                                    await Html.RenderPartialAsync("_CheckBoxSeleccion", new ViewDataDictionary(ViewData){
                                        { "Seleccionado", item.Seleccionado },
                                        { "CallbackFunctionCheckBox", "CallbackFunctionCheckBoxArticulo" },
                                        { "IdRecepcionActivoFijoDetalle", item.MaestroArticuloSucursal.IdMaestroArticuloSucursal }
                                    });
                                }
                            </td>
                        }
                    }

                    <td class="thNombreArticulo" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.nombreArticulo)">
                        @Html.DisplayFor(modelItem => item.MaestroArticuloSucursal.Articulo.Nombre)
                    </td>

                    <td class="thTipoArticulo" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.tipoArticulo)">
                        @Html.DisplayFor(modelItem => item.MaestroArticuloSucursal.Articulo.SubClaseArticulo.ClaseArticulo.TipoArticulo.Nombre)
                    </td>

                    <td class="thClaseArticulo" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.claseArticulo)">
                        @Html.DisplayFor(modelItem => item.MaestroArticuloSucursal.Articulo.SubClaseArticulo.ClaseArticulo.Nombre)
                    </td>

                    <td class="thSubclaseArticulo" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.subclaseArticulo)">
                        @Html.DisplayFor(modelItem => item.MaestroArticuloSucursal.Articulo.SubClaseArticulo.Nombre)
                    </td>

                    <td class="thUnidadMedida" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.unidadMedida)">
                        @Html.DisplayFor(modelItem => item.MaestroArticuloSucursal.Articulo.UnidadMedida.Nombre)
                    </td>

                    <td class="thMarca" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.marca)">
                        @Html.DisplayFor(modelItem => item.MaestroArticuloSucursal.Articulo.Modelo.Marca.Nombre)
                    </td>

                    <td class="thModelo" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.modelo)">
                        @Html.DisplayFor(modelItem => item.MaestroArticuloSucursal.Articulo.Modelo.Nombre)
                    </td>

                    @{ 
                        if (mostrarValorActual)
                        {
                            <td class="thValorActual" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.valorActual)">
                                @Html.DisplayFor(modelItem => item.MaestroArticuloSucursal.ValorActual)
                            </td>
                        }
                    }

                    <td class="thCantidad hide" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.cantidad)">
                        <div class="input-group spinner" data-trigger="spinner" id="spinner_@item.MaestroArticuloSucursal.IdMaestroArticuloSucursal">
                            <input type="text" id="cantidad_@item.MaestroArticuloSucursal.IdMaestroArticuloSucursal" name="cantidad_@item.MaestroArticuloSucursal.IdMaestroArticuloSucursal" class="form-control" @{await ViewContext.Writer.WriteAsync(isFuncionarioSolicitante ? $"data-max='{item.CantidadBodega}'" : "");} data-rule="quantity" style="padding-left:6px !important;" />
                            <div class="input-group-addon" style="padding-left:17px !important;">
                                <a href="javascript:;" class="spin-up" data-spin="up"><i class="fa fa-caret-up"></i></a>
                                <a href="javascript:;" class="spin-down" data-spin="down"><i class="fa fa-caret-down"></i></a>
                            </div>
                        </div>
                    </td>

                    <td class="thValorUnitario hide" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.valorUnitario)">
                        <label class="input">
                            <input id="valorUnitario_@item.MaestroArticuloSucursal.IdMaestroArticuloSucursal" name="valorUnitario_@item.MaestroArticuloSucursal.IdMaestroArticuloSucursal" class="form-control touchspin_tasa" onchange="calcularCostos();" />
                        </label>
                    </td>

                    <td class="thValorTotal hide" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.valorTotal)">
                        <span id="spanValorTotal_@item.MaestroArticuloSucursal.IdMaestroArticuloSucursal">0.00</span>
                    </td>

                    <td class="thCantidadBodega hide" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.cantidadBodega)">
                        @Html.DisplayFor(modelItem => item.CantidadBodega)
                    </td>

                    <td class="thProveedor hide" id="@String.Format("{0}{1}{2}", nombreTabla, item.MaestroArticuloSucursal.IdMaestroArticuloSucursal, ThClassName.proveedor)">
                        @Html.DisplayFor(modelItem => item.Proveedor.RazonSocial)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    @{ 
        string idsArrRecepcionActivoFijoDetalleTodos = String.Join(",", Model.Select(c => c.MaestroArticuloSucursal.IdMaestroArticuloSucursal));
    }
    <input type="hidden" id="hIdsRecepcionActivoFijoDetalleTodos" value="@idsArrRecepcionActivoFijoDetalleTodos" />
</div>
<script>
    arrRecepcionActivoFijoDetalleTodos = "@idsArrRecepcionActivoFijoDetalleTodos".split(",");
</script>